# This is a basic workflow to help you get started with Actions

name: Validation questions and Widoco documentation

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Deploy Java
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 1.8

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: true 

    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install json2html

    
    - name: Checkout pellet
      uses: actions/checkout@v2
      with: 
        repository: stardog-union/pellet
        path: pellet

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install Pellet reasoner
      working-directory: pellet
      run: mvn install

    - name: Launch tests
      working-directory: /home/runner/work/ROH/ROH/validation-questions
      run: mvn surefire-report:report -Dmodel=https://raw.githubusercontent.com/HerculesCRUE/ROH/main/roh/modules/core/roh-core.ttl,https://raw.githubusercontent.com/HerculesCRUE/ROH/main/validation-data/rdf/roh_data_edma.ttl -DqueryFolder=/home/runner/work/ROH/ROH/validation-questions/sparql-query/

    - name: Create html folder
      run: |
        cd validation-questions
        mkdir html

    - name: Generate maven site
      working-directory: /home/runner/work/ROH/ROH/validation-questions
      run: |
        mvn site
      # cp -r /src/site/site.xml home/runner/work/ROH/ROH/validation-questions/html/


    - name: Generate documentation
      working-directory: /home/runner/work/ROH/ROH/validation-questions
      run: mvn javadoc:test-javadoc 
    - name: report 
      run: |
        cd validation-questions
        cp -r *.html /home/runner/work/ROH/ROH/validation-questions/html/


    - name: Create html files
      run: |
        cd validation-questions/html
        python jsonTohtml.py "/home/runner/work/ROH/ROH/validation-questions/sparql-query" "/home/runner/work/ROH/ROH/validation-questions/html"
    
    - name: Download widoco
      working-directory: /home/runner/work/ROH/ROH
      run: mkdir widoco && wget -O widoco/widoco.jar https://github.com/dgarijo/Widoco/releases/download/v1.4.14/widoco-1.4.14-jar-with-dependencies.jar

    - name: Compile documentation
      run: |
        cd widoco
        mkdir config
        java -jar ./widoco.jar \
        -ontFile ../roh/modules/core/roh-core.ttl \
        -oops \
        -webVowl \
        -includeAnnotationProperties \
        -outFolder output/roh \
        -rewriteAll \
        -confFile ../roh/modules/core/doc/widoco.config.txt \
        -includeImportedOntologies \
        -uniteSections \
        -excludeIntroduction
        mv output/roh/index-en.html output/roh/index.html
        mv output/roh ../docs/
        cp -r ../mirror ../docs/ 

    - name: Copy ontology modules to docs folder
      run: cp -r roh/modules/* docs/roh/

    - name: Copy mirrored ontologies to docs folder
      run: cp -r mirror/ docs/

    - name: Copy html file to docs folder
      run: cp -r /home/runner/work/ROH/ROH/validation-questions/html/ docs/html/

    - name: Publish on Github Pages
      uses: crazy-max/ghaction-github-pages@v2.3.0
      with:
        build_dir: docs 
        publish_dir: target/site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

 
    #- name: Deploy github pages
    #  uses: peaceiris/actions-gh-pages@v3.6.1
    #  with:
    #      keep_files: true
    #      publish_dir: target/site
    #      github_token: ${{ secrets.GITHUB_TOKEN }}
