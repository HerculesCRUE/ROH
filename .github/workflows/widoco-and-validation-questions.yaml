# This is a basic workflow to help you get started with Actions

name: widoco and validation questions 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Deploy Java
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 1.8
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        #ref: edma
        #path: edma
        submodules: true 
    
    - name: Download widoco
      working-directory: /home/runner/work/ROH/ROH
      run: mkdir widoco && wget -O widoco/widoco.jar https://github.com/dgarijo/Widoco/releases/download/v1.4.14/widoco-1.4.14-jar-with-dependencies.jar

    - name: Compile documentation
      working-directory: /home/runner/work/ROH/ROH
      run: |
        cd widoco
        mkdir config
        java -jar ./widoco.jar \
        -ontFile /home/runner/work/ROH/ROH/roh/modules/core/roh-core.ttl \
        -oops \
        -webVowl \
        -includeAnnotationProperties \
        -outFolder output/roh \
        -rewriteAll \
        -confFile /home/runner/work/ROH/ROH/roh/modules/core/doc/widoco.config.txt \
        -includeImportedOntologies \
        -uniteSections \
        -excludeIntroduction
        mv output/roh/index-en.html output/roh/index.html
        mv output/roh ../docs/
        cp -r ../mirror ../docs/

    - name: Copy ontology modules to docs folder
      working-directory: /home/runner/work/ROH/ROH
      run: cp -r roh/modules/* docs/roh/

    - name: Copy mirrored ontologies to docs folder
      working-directory: /home/runner/work/ROH/ROH
      run: cp -r mirror/ docs/

      
    - name: Checkout validation-questions
      uses: actions/checkout@v2
      with: 
        repository: HerculesCRUE/GnossDeustoBackend
        path: GnossDeustoBackend

    - name: Checkout pellet
      uses: actions/checkout@v2
      with: 
        repository: stardog-union/pellet
        path: pellet

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install Pellet reasoner
      working-directory: pellet
      run: mvn install

    - name: Launch tests
      working-directory: /home/runner/work/ROH/ROH/validation-questions
      run: mvn surefire-report:report -Dmodel=https://raw.githubusercontent.com/HerculesCRUE/ROH/roh/modules/core/roh-core.ttl,https://raw.githubusercontent.com/HerculesCRUE/ROH/validation-data/rdf/roh_data_edma.ttl,https://raw.githubusercontent.com/HerculesCRUE/ROH/mirror/uneskos/unesco-individuals.rdf -DqueryFolder=/home/runner/work/ROH/ROH/evalidation-questions/sparql-query/

    - name: Generate maven site
      working-directory: GnossDeustoBackend/validation-questions
      run: mvn site

    - name: Generate documentation
      working-directory: GnossDeustoBackend/validation-questions
      run: mvn javadoc:test-javadoc
      

    - name: Publish on Github Pages
      uses: crazy-max/ghaction-github-pages@v2.3.0
      with:
        #build_dir: edma/docs 
        build_dir: docs 
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      
    #- name: Publish on Github Pages
    #  uses: crazy-max/ghaction-github-pages@v2.3.0
    #  with:
    #    build_dir: docs 
    #  env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}